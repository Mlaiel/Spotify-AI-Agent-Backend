# docker-compose.yml â€“ Development
# -------------------------------
# Rollen: Lead Dev, Architecte IA, Backend Senior, ML Engineer, DBA/Data Engineer, Security Specialist, Microservices Architect
# Dev-Stack: Backend, Celery, Redis, Postgres, Nginx, Volumes, Netzwerke

version: '3.9'
services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: uvicorn app.asgi:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ../:/app
    env_file:
      - ../config/environments/.env.development
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    networks:
      - backend-net

  celery-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: celery -A app.tasks.celery_app.celery_app worker --loglevel=info
    volumes:
      - ../:/app
    env_file:
      - ../config/environments/.env.development
    depends_on:
      - backend
      - redis
    networks:
      - backend-net

  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: celery -A app.tasks.celery_app.celery_app beat --loglevel=info
    volumes:
      - ../:/app
    env_file:
      - ../config/environments/.env.development
    depends_on:
      - backend
      - redis
    networks:
      - backend-net

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - backend-net

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: spotify_ai_agent_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev-password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-net

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../static:/app/static
      - ../media:/app/media
    depends_on:
      - backend
    networks:
      - backend-net

volumes:
  pgdata:

networks:
  backend-net:
    driver: bridge
