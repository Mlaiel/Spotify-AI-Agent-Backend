# Clés de Développement - EXEMPLE UNIQUEMENT
# ==========================================
# ATTENTION: Ces clés sont des exemples pour le développement
# N'utilisez JAMAIS ces clés en production !

# Clé JWT de développement (exemple)
# Cette clé est utilisée pour signer les tokens JWT en développement
# Générez votre propre clé avec: openssl rand -hex 32
jwt_secret_dev=your-dev-jwt-secret-key-generate-a-real-one-with-openssl-rand-hex-32

# Clé de chiffrement de développement (exemple)  
# Cette clé est utilisée pour le chiffrement des données sensibles
# Générez avec: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
encryption_key_dev=your-dev-encryption-key-generate-with-fernet

# Clé secrète de l'application (exemple)
# Utilisée pour diverses fonctions de sécurité
app_secret_dev=your-dev-app-secret-key-change-this-immediately

# IMPORTANT: Instructions pour générer de vraies clés
# ===================================================

# 1. Clé JWT sécurisée:
# openssl rand -hex 32

# 2. Clé de chiffrement Fernet:
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"

# 3. Clé secrète générale:
# python -c "import secrets; print(secrets.token_urlsafe(32))"

# 4. Mot de passe sécurisé:
# python -c "import secrets; import string; chars = string.ascii_letters + string.digits + '!@#$%^&*'; print(''.join(secrets.choice(chars) for _ in range(16)))"

# RAPPEL SÉCURITÉ:
# - Changez toutes ces clés avant utilisation
# - N'ajoutez jamais ce fichier au contrôle de version
# - Utilisez des variables d'environnement ou un gestionnaire de secrets
# - Générez des clés différentes pour chaque environnement
# - Effectuez une rotation régulière des clés
