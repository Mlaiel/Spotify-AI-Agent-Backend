# Enterprise Tier Tenant Configuration
# ===================================
# Comprehensive configuration for enterprise tenants with maximum features and resources

tenant_config:
  # Enterprise tenant information
  tenant_info:
    tenant_id: "${TENANT_ID}"
    tenant_name: "${TENANT_NAME}"
    tenant_type: "enterprise"
    
    # Comprehensive metadata
    metadata:
      created_at: "${TENANT_CREATED_AT}"
      updated_at: "${TENANT_UPDATED_AT}"
      contact_email: "${TENANT_CONTACT_EMAIL}"
      technical_contact: "${TENANT_TECHNICAL_CONTACT}"
      billing_contact: "${TENANT_BILLING_CONTACT}"
      region: "${TENANT_REGION}"
      timezone: "${TENANT_TIMEZONE}"
      compliance_officer: "${TENANT_COMPLIANCE_OFFICER}"
      
    # Enterprise subscription
    subscription:
      plan: "enterprise"
      billing_cycle: "${BILLING_CYCLE:-annual}"
      max_users: ${MAX_USERS:-100000}
      max_storage_gb: ${MAX_STORAGE_GB:-10000}
      max_api_calls_per_month: ${MAX_API_CALLS:-100000000}
      dedicated_support: true
      sla_tier: "premium"
      
    # Service level agreements
    sla:
      uptime_guarantee: "99.95%"
      response_time_guarantee: "< 100ms p99"
      support_response_time: "< 1 hour"
      maintenance_window: "${MAINTENANCE_WINDOW:-Sunday 2-4 AM}"
      
  # Enterprise database allocation
  databases:
    # Dedicated PostgreSQL cluster
    postgresql:
      enabled: true
      deployment_type: "dedicated_cluster"
      database_name: "${TENANT_ID}_postgresql"
      
      # Multiple schemas for different purposes
      schemas:
        tenant_data: "${TENANT_ID}_data"
        tenant_analytics: "${TENANT_ID}_analytics"
        tenant_ml: "${TENANT_ID}_ml"
        tenant_audit: "${TENANT_ID}_audit"
        tenant_reporting: "${TENANT_ID}_reporting"
        tenant_archival: "${TENANT_ID}_archival"
        
      # High-performance resources
      resources:
        cpu_cores: ${POSTGRESQL_CPU_CORES:-32}
        memory_gb: ${POSTGRESQL_MEMORY_GB:-128}
        storage_gb: ${POSTGRESQL_STORAGE_GB:-5000}
        max_connections: ${POSTGRESQL_MAX_CONNECTIONS:-1000}
        iops: ${POSTGRESQL_IOPS:-10000}
        
      # High availability configuration
      high_availability:
        enabled: true
        replication:
          type: "synchronous"
          replicas: 3
          cross_region: true
        failover:
          automatic: true
          rpo_seconds: 0
          rto_seconds: 30
          
      # Performance optimization
      performance:
        connection_pooling:
          enabled: true
          pool_size: 200
          max_overflow: 100
        query_optimization:
          enabled: true
          auto_explain: true
          slow_query_threshold: 100
        indexing:
          auto_optimization: true
          
    # Dedicated MongoDB cluster
    mongodb:
      enabled: true
      deployment_type: "dedicated_sharded_cluster"
      database_name: "${TENANT_ID}_mongodb"
      
      # Comprehensive collections
      collections:
        users: "${TENANT_ID}_users"
        tracks: "${TENANT_ID}_tracks"
        albums: "${TENANT_ID}_albums"
        artists: "${TENANT_ID}_artists"
        playlists: "${TENANT_ID}_playlists"
        listening_history: "${TENANT_ID}_listening_history"
        recommendations: "${TENANT_ID}_recommendations"
        analytics: "${TENANT_ID}_analytics"
        ml_models: "${TENANT_ID}_ml_models"
        user_preferences: "${TENANT_ID}_user_preferences"
        social_graph: "${TENANT_ID}_social_graph"
        
      # Advanced sharding
      sharding:
        enabled: true
        shard_key: "tenant_id"
        chunks_per_shard: 64
        balancer_enabled: true
        
      # High-performance resources
      resources:
        cpu_cores: ${MONGODB_CPU_CORES:-32}
        memory_gb: ${MONGODB_MEMORY_GB:-128}
        storage_gb: ${MONGODB_STORAGE_GB:-5000}
        
      # Replica set configuration
      replica_set:
        members: 5
        arbiter: true
        read_preference: "primaryPreferred"
        write_concern: "majority"
        
    # Dedicated Redis cluster
    redis:
      enabled: true
      deployment_type: "dedicated_cluster"
      
      # Multiple databases for different purposes
      database_mapping:
        cache: 0
        sessions: 1
        rate_limiting: 2
        analytics: 3
        ml_cache: 4
        real_time: 5
        
      # Advanced namespacing
      namespaces:
        cache: "cache:${TENANT_ID}:"
        session: "session:${TENANT_ID}:"
        analytics: "analytics:${TENANT_ID}:"
        rate_limit: "rate_limit:${TENANT_ID}:"
        ml_cache: "ml_cache:${TENANT_ID}:"
        real_time: "real_time:${TENANT_ID}:"
        
      # High-performance resources
      resources:
        memory_gb: ${REDIS_MEMORY_GB:-32}
        max_connections: ${REDIS_MAX_CONNECTIONS:-10000}
        
      # Clustering
      cluster:
        enabled: true
        nodes: 6
        replicas_per_node: 1
        
    # ClickHouse for analytics
    clickhouse:
      enabled: true
      deployment_type: "dedicated_cluster"
      database_name: "${TENANT_ID}_analytics"
      
      # Analytics tables
      tables:
        user_events: "user_events_${TENANT_ID}"
        listening_sessions: "listening_sessions_${TENANT_ID}"
        recommendation_events: "recommendation_events_${TENANT_ID}"
        performance_metrics: "performance_metrics_${TENANT_ID}"
        business_metrics: "business_metrics_${TENANT_ID}"
        
      resources:
        cpu_cores: ${CLICKHOUSE_CPU_CORES:-16}
        memory_gb: ${CLICKHOUSE_MEMORY_GB:-64}
        storage_gb: ${CLICKHOUSE_STORAGE_GB:-2000}
        
      # Distributed tables
      distributed:
        enabled: true
        shards: 4
        replicas: 2
        
    # TimescaleDB for time series
    timescaledb:
      enabled: true
      deployment_type: "dedicated"
      database_name: "${TENANT_ID}_timeseries"
      
      # Time series tables
      hypertables:
        metrics: "metrics_${TENANT_ID}"
        events: "events_${TENANT_ID}"
        logs: "logs_${TENANT_ID}"
        
      resources:
        cpu_cores: ${TIMESCALEDB_CPU_CORES:-8}
        memory_gb: ${TIMESCALEDB_MEMORY_GB:-32}
        storage_gb: ${TIMESCALEDB_STORAGE_GB:-1000}
        
      # Time series optimization
      compression:
        enabled: true
        compression_interval: "1 day"
        
    # Elasticsearch for search
    elasticsearch:
      enabled: ${ELASTICSEARCH_ENABLED:-true}
      deployment_type: "dedicated_cluster"
      
      # Search indices
      indices:
        tracks: "tracks_${TENANT_ID}"
        artists: "artists_${TENANT_ID}"
        albums: "albums_${TENANT_ID}"
        playlists: "playlists_${TENANT_ID}"
        
      resources:
        cpu_cores: ${ELASTICSEARCH_CPU_CORES:-16}
        memory_gb: ${ELASTICSEARCH_MEMORY_GB:-64}
        storage_gb: ${ELASTICSEARCH_STORAGE_GB:-1000}
        
      # Cluster configuration
      cluster:
        master_nodes: 3
        data_nodes: 6
        ingest_nodes: 2
        
  # Enterprise security
  security:
    # Advanced encryption
    encryption:
      enabled: true
      key_management: "hsm"
      key_rotation: "automatic"
      algorithm: "AES-256-GCM"
      
      # Per-service encryption
      per_service:
        postgresql: true
        mongodb: true
        redis: true
        clickhouse: true
        backup: true
        
    # Comprehensive access control
    access_control:
      # Multiple admin levels
      admin_users:
        - username: "${TENANT_ID}_super_admin"
          password: "${TENANT_SUPER_ADMIN_PASSWORD}"
          roles: ["tenant_super_admin"]
          mfa_required: true
          
        - username: "${TENANT_ID}_db_admin"
          password: "${TENANT_DB_ADMIN_PASSWORD}"
          roles: ["tenant_db_admin"]
          mfa_required: true
          
      # Application service accounts
      service_accounts:
        - username: "${TENANT_ID}_app_primary"
          password: "${TENANT_APP_PRIMARY_PASSWORD}"
          roles: ["tenant_app_primary"]
          
        - username: "${TENANT_ID}_app_readonly"
          password: "${TENANT_APP_READONLY_PASSWORD}"
          roles: ["tenant_app_readonly"]
          
        - username: "${TENANT_ID}_analytics"
          password: "${TENANT_ANALYTICS_PASSWORD}"
          roles: ["tenant_analytics"]
          
        - username: "${TENANT_ID}_ml_service"
          password: "${TENANT_ML_PASSWORD}"
          roles: ["tenant_ml_service"]
          
      # Role-based access control
      rbac:
        enabled: true
        policies:
          - name: "data_scientist"
            permissions: ["read_analytics", "read_ml_data"]
          - name: "developer"
            permissions: ["read_app_data", "write_app_data"]
          - name: "admin"
            permissions: ["full_access"]
            
    # Network security
    network:
      vpc_isolation: true
      vpc_id: "${TENANT_VPC_ID}"
      subnet_ids: ${TENANT_SUBNET_IDS}
      security_groups: ${TENANT_SECURITY_GROUPS}
      
      # IP whitelisting
      allowed_ips: ${TENANT_ALLOWED_IPS}
      
      # VPN access
      vpn:
        enabled: ${VPN_ENABLED:-true}
        type: "site-to-site"
        
    # Advanced SSL/TLS
    ssl:
      enabled: true
      cert_type: "enterprise"
      cert_authority: "${TENANT_CA}"
      mutual_tls: true
      
    # Security monitoring
    security_monitoring:
      enabled: true
      intrusion_detection: true
      anomaly_detection: true
      threat_intelligence: true
      
  # Enterprise backup and disaster recovery
  backup:
    enabled: true
    strategy: "enterprise"
    
    # Comprehensive backup schedule
    schedule:
      full_backup: "${BACKUP_FULL_SCHEDULE:-0 1 * * 0}"
      incremental_backup: "${BACKUP_INCREMENTAL_SCHEDULE:-0 */6 * * *}"
      transaction_log_backup: "${BACKUP_LOG_SCHEDULE:-*/15 * * * *}"
      
    # Multi-region backup
    storage:
      primary_region: "${BACKUP_PRIMARY_REGION}"
      secondary_regions: ${BACKUP_SECONDARY_REGIONS}
      encryption: true
      encryption_key: "${BACKUP_ENCRYPTION_KEY}"
      
    # Point-in-time recovery
    point_in_time_recovery:
      enabled: true
      retention_period: "${PITR_RETENTION:-30 days}"
      
    # Disaster recovery
    disaster_recovery:
      enabled: true
      rpo_minutes: ${DR_RPO:-15}
      rto_minutes: ${DR_RTO:-60}
      failover_regions: ${DR_FAILOVER_REGIONS}
      
  # Enterprise monitoring
  monitoring:
    enabled: true
    level: "enterprise"
    
    # Comprehensive metrics
    metrics:
      collection_interval: 30
      retention_days: ${METRICS_RETENTION:-365}
      
      # Custom metrics
      custom_metrics:
        - name: "business_kpis"
          retention: "2 years"
        - name: "compliance_metrics"
          retention: "7 years"
          
    # Advanced alerting
    alerts:
      enabled: true
      escalation_levels: 3
      
      channels:
        email: "${TENANT_ALERT_EMAIL}"
        slack: "${TENANT_SLACK_WEBHOOK}"
        pagerduty: "${TENANT_PAGERDUTY_KEY}"
        webhook: "${TENANT_WEBHOOK_URL}"
        sms: "${TENANT_SMS_ALERTS}"
        
    # Performance monitoring
    performance:
      apm_enabled: true
      distributed_tracing: true
      slow_query_threshold: 50
      resource_usage_alerts: true
      
    # Log management
    logging:
      centralized: true
      retention: "2 years"
      analysis: true
      
  # Enterprise compliance
  compliance:
    # Data governance
    data_governance:
      classification: true
      lineage: true
      retention: true
      privacy_controls: true
      
    # Regulatory compliance
    regulations: ${COMPLIANCE_REGULATIONS}
    
    # Advanced auditing
    auditing:
      enabled: true
      level: "comprehensive"
      retention_period: "7 years"
      immutable_logs: true
      
    # Privacy controls
    privacy:
      data_minimization: true
      consent_management: true
      right_to_erasure: true
      data_portability: true
      
  # Enterprise performance
  performance_tier:
    # Unlimited resources
    limits:
      cpu_limit: "unlimited"
      memory_limit: "unlimited"
      storage_limit: "unlimited"
      connection_limit: "unlimited"
      
    # Highest priority
    qos:
      priority: "highest"
      guaranteed_iops: ${GUARANTEED_IOPS:-10000}
      burst_iops: ${BURST_IOPS:-50000}
      
    # Performance SLA
    sla:
      response_time_p99: "< 100ms"
      throughput_guarantee: "${THROUGHPUT_GUARANTEE}"
      uptime_guarantee: "99.95%"
      
  # Enterprise integrations
  integrations:
    # Advanced Spotify API
    spotify_api:
      client_id: "${SPOTIFY_CLIENT_ID}"
      client_secret: "${SPOTIFY_CLIENT_SECRET}"
      redirect_uri: "${SPOTIFY_REDIRECT_URI}"
      enterprise_features: true
      rate_limit_increase: true
      
    # Advanced analytics
    analytics:
      enabled: true
      data_warehouse: "${DATA_WAREHOUSE_TYPE}"
      business_intelligence: true
      real_time_analytics: true
      
    # ML/AI services
    ml_services:
      enabled: true
      model_storage: "${ML_MODEL_STORAGE_PATH}/${TENANT_ID}"
      gpu_acceleration: true
      custom_models: true
      
    # Enterprise integrations
    enterprise_integrations:
      active_directory: ${AD_ENABLED:-false}
      ldap: ${LDAP_ENABLED:-false}
      saml_sso: ${SAML_ENABLED:-true}
      oauth2: ${OAUTH2_ENABLED:-true}
      
    # API management
    api_management:
      gateway: true
      rate_limiting: "custom"
      analytics: true
      documentation: "enterprise"
      
  # Environment-specific overrides
  environment_overrides:
    development:
      # Development-specific settings
      security:
        ssl:
          enabled: false
        encryption:
          enabled: false
      monitoring:
        level: "development"
        
    staging:
      # Production-like with reduced scale
      resources:
        scale_factor: 0.3
      backup:
        retention_days: 7
        
    production:
      # Full enterprise configuration
      security:
        all_features: true
      monitoring:
        level: "enterprise"
      backup:
        all_features: true

# Enterprise-specific configurations
enterprise_config:
  # Dedicated infrastructure
  infrastructure:
    dedicated_hosts: true
    isolated_network: true
    dedicated_support_team: true
    
  # Custom development
  custom_development:
    enabled: true
    dedicated_developer: true
    custom_features: true
    
  # Training and onboarding
  training:
    technical_training: true
    admin_training: true
    user_training: true
    documentation: "comprehensive"
    
  # Professional services
  professional_services:
    implementation_support: true
    migration_assistance: true
    performance_optimization: true
    security_assessment: true
    
# Multi-region deployment
multi_region:
  enabled: true
  
  regions:
    primary: "${PRIMARY_REGION}"
    secondary: ${SECONDARY_REGIONS}
    
  data_residency:
    enabled: true
    requirements: ${DATA_RESIDENCY_REQUIREMENTS}
    
  failover:
    automatic: true
    cross_region: true
    rpo_minutes: 5
    rto_minutes: 15
